{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass TrainerService {\n  checkForgetPassword(trainer) {\n    throw new Error('Method not implemented.');\n  }\n  updatePassword(member) {\n    throw new Error('Method not implemented.');\n  }\n  constructor(http) {\n    this.http = http;\n    this.api = 'http://localhost:8080/trainer/';\n  }\n  getAllTrainer() {\n    return this.http.get(this.api + 'listOfTrainer');\n  }\n  loginTrainer(trainer) {\n    return this.http.post(this.api + 'loginTrainer', trainer);\n  }\n  // searchTrainerById(trainerId: number) {\n  //   return this.http.get<Trainer>(`${this.api + 'approveTrainer'}/${trainerId}`);\n  // }\n  insertTrainer(trainer) {\n    return this.http.post(this.api + \"insertTrainer\", trainer);\n  }\n  approveTrainer(trainerId) {\n    return this.http.get(`${this.api + 'approveTrainer'}/${trainerId}`);\n  }\n  numberOfTrainer() {\n    return this.http.get(this.api + 'numberOfTrainer');\n  }\n  checkMemberEmail(trainerEmail) {\n    return this.http.get(`${this.api + 'approveTrainer'}/${trainerEmail}`);\n  }\n  static #_ = this.ɵfac = function TrainerService_Factory(t) {\n    return new (t || TrainerService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TrainerService,\n    factory: TrainerService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { TrainerService };","map":{"version":3,"names":["TrainerService","checkForgetPassword","trainer","Error","updatePassword","member","constructor","http","api","getAllTrainer","get","loginTrainer","post","insertTrainer","approveTrainer","trainerId","numberOfTrainer","checkMemberEmail","trainerEmail","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\angular\\MyFitness\\src\\app\\services\\trainer.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Trainer } from '../entity/trainer';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TrainerService {\n  checkForgetPassword(trainer: Trainer) {\n    throw new Error('Method not implemented.');\n  }\n  updatePassword(member: any) {\n    throw new Error('Method not implemented.');\n  }\n  private api = 'http://localhost:8080/trainer/';\n  constructor(private http: HttpClient) { }\n\n  getAllTrainer(): Observable<Trainer[]> {\n    return this.http.get<Trainer[]>(this.api + 'listOfTrainer');\n  }\n\n  loginTrainer(trainer: Trainer) {\n    return this.http.post(this.api + 'loginTrainer', trainer);\n  }\n\n  // searchTrainerById(trainerId: number) {\n  //   return this.http.get<Trainer>(`${this.api + 'approveTrainer'}/${trainerId}`);\n  // }\n\n  insertTrainer(trainer: Trainer) {\n    return this.http.post(this.api + \"insertTrainer\", trainer)\n  }\n\n  approveTrainer(trainerId: number) {\n    return this.http.get<Trainer>(`${this.api + 'approveTrainer'}/${trainerId}`);\n  }\n\n  numberOfTrainer() {\n    return this.http.get(this.api + 'numberOfTrainer')\n  }\n\n  checkMemberEmail(trainerEmail:string) {\n    return this.http.get<Trainer>(`${this.api + 'approveTrainer'}/${trainerEmail}`);\n  }\n}\n"],"mappings":";;AAKA,MAGaA,cAAc;EACzBC,mBAAmBA,CAACC,OAAgB;IAClC,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EACAC,cAAcA,CAACC,MAAW;IACxB,MAAM,IAAIF,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAEAG,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADhB,KAAAC,GAAG,GAAG,gCAAgC;EACN;EAExCC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,GAAG,GAAG,eAAe,CAAC;EAC7D;EAEAG,YAAYA,CAACT,OAAgB;IAC3B,OAAO,IAAI,CAACK,IAAI,CAACK,IAAI,CAAC,IAAI,CAACJ,GAAG,GAAG,cAAc,EAAEN,OAAO,CAAC;EAC3D;EAEA;EACA;EACA;EAEAW,aAAaA,CAACX,OAAgB;IAC5B,OAAO,IAAI,CAACK,IAAI,CAACK,IAAI,CAAC,IAAI,CAACJ,GAAG,GAAG,eAAe,EAAEN,OAAO,CAAC;EAC5D;EAEAY,cAAcA,CAACC,SAAiB;IAC9B,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,GAAG,GAAG,gBAAgB,IAAIO,SAAS,EAAE,CAAC;EAC9E;EAEAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACT,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,GAAG,GAAG,iBAAiB,CAAC;EACpD;EAEAS,gBAAgBA,CAACC,YAAmB;IAClC,OAAO,IAAI,CAACX,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,GAAG,GAAG,gBAAgB,IAAIU,YAAY,EAAE,CAAC;EACjF;EAAC,QAAAC,CAAA,G;qBApCUnB,cAAc,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdxB,cAAc;IAAAyB,OAAA,EAAdzB,cAAc,CAAA0B,IAAA;IAAAC,UAAA,EAFb;EAAM;;SAEP3B,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}