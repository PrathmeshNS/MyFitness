{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { ConstantValues } from '../constant/Constant';\nlet EncryptDecryptService = class EncryptDecryptService {\n  constructor(crypto) {\n    this.crypto = crypto;\n  }\n  encryption(data) {\n    return CryptoJS.AES.encrypt(data, ConstantValues.EN_KEYS).toString();\n  }\n  decryption(data) {\n    const decrypt = CryptoJS.AES.decrypt(data, ConstantValues.EN_KEYS);\n    return decrypt.toString(CryptoJS.enc.Utf8);\n  }\n};\nEncryptDecryptService = __decorate([Injectable({\n  providedIn: 'root'\n})], EncryptDecryptService);\nexport { EncryptDecryptService };","map":{"version":3,"names":["Injectable","ConstantValues","EncryptDecryptService","constructor","crypto","encryption","data","CryptoJS","AES","encrypt","EN_KEYS","toString","decryption","decrypt","enc","Utf8","__decorate","providedIn"],"sources":["D:\\angular\\MyFitness\\src\\app\\services\\encrypt-decrypt.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ConstantValues } from '../constant/Constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EncryptDecryptService {\n\n  constructor(private crypto:CryptoJS.) { }\n\n  encryption(data:string){\n   return CryptoJS.AES.encrypt(data, ConstantValues.EN_KEYS).toString();\n  }\n\n  decryption(data:string){\n    const decrypt =  CryptoJS.AES.decrypt(data,ConstantValues.EN_KEYS)\n    return decrypt.toString(CryptoJS.enc.Utf8);\n  }\n\n}\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,cAAc,QAAQ,sBAAsB;AAKrD,IAAaC,qBAAqB,GAAlC,MAAaA,qBAAqB;EAEhCC,YAAoBC,MAAgB;IAAhB,KAAAA,MAAM,GAANA,MAAM;EAAc;EAExCC,UAAUA,CAACC,IAAW;IACrB,OAAOC,QAAQ,CAACC,GAAG,CAACC,OAAO,CAACH,IAAI,EAAEL,cAAc,CAACS,OAAO,CAAC,CAACC,QAAQ,EAAE;EACrE;EAEAC,UAAUA,CAACN,IAAW;IACpB,MAAMO,OAAO,GAAIN,QAAQ,CAACC,GAAG,CAACK,OAAO,CAACP,IAAI,EAACL,cAAc,CAACS,OAAO,CAAC;IAClE,OAAOG,OAAO,CAACF,QAAQ,CAACJ,QAAQ,CAACO,GAAG,CAACC,IAAI,CAAC;EAC5C;CAED;AAbYb,qBAAqB,GAAAc,UAAA,EAHjChB,UAAU,CAAC;EACViB,UAAU,EAAE;CACb,CAAC,C,EACWf,qBAAqB,CAajC;SAbYA,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}