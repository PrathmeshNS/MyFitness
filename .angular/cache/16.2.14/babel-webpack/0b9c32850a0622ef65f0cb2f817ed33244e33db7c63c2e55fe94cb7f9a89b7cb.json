{"ast":null,"code":"import { ConstantValues } from '../constant/Constant';\nimport * as i0 from \"@angular/core\";\nclass EncryptDecryptService {\n  constructor() {\n    this.crypto = new CryptoJS.AES();\n  }\n  encryption(data) {\n    return CryptoJS.AES.encrypt(data, ConstantValues.EN_KEYS).toString();\n  }\n  decryption(data) {\n    const decrypt = CryptoJS.AES.decrypt(data, ConstantValues.EN_KEYS);\n    return decrypt.toString(CryptoJS.enc.Utf8);\n  }\n  static #_ = this.ɵfac = function EncryptDecryptService_Factory(t) {\n    return new (t || EncryptDecryptService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EncryptDecryptService,\n    factory: EncryptDecryptService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { EncryptDecryptService };","map":{"version":3,"names":["ConstantValues","EncryptDecryptService","constructor","crypto","CryptoJS","AES","encryption","data","encrypt","EN_KEYS","toString","decryption","decrypt","enc","Utf8","_","_2","factory","ɵfac","providedIn"],"sources":["D:\\angular\\MyFitness\\src\\app\\services\\encrypt-decrypt.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ConstantValues } from '../constant/Constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EncryptDecryptService {\n  private crypto = new CryptoJS.AES()\n  constructor() { }\n\n  encryption(data:string){\n   return CryptoJS.AES.encrypt(data, ConstantValues.EN_KEYS).toString();\n  }\n\n  decryption(data:string){\n    const decrypt =  CryptoJS.AES.decrypt(data,ConstantValues.EN_KEYS)\n    return decrypt.toString(CryptoJS.enc.Utf8);\n  }\n\n}\n"],"mappings":"AACA,SAASA,cAAc,QAAQ,sBAAsB;;AAErD,MAGaC,qBAAqB;EAEhCC,YAAA;IADQ,KAAAC,MAAM,GAAG,IAAIC,QAAQ,CAACC,GAAG,EAAE;EACnB;EAEhBC,UAAUA,CAACC,IAAW;IACrB,OAAOH,QAAQ,CAACC,GAAG,CAACG,OAAO,CAACD,IAAI,EAAEP,cAAc,CAACS,OAAO,CAAC,CAACC,QAAQ,EAAE;EACrE;EAEAC,UAAUA,CAACJ,IAAW;IACpB,MAAMK,OAAO,GAAIR,QAAQ,CAACC,GAAG,CAACO,OAAO,CAACL,IAAI,EAACP,cAAc,CAACS,OAAO,CAAC;IAClE,OAAOG,OAAO,CAACF,QAAQ,CAACN,QAAQ,CAACS,GAAG,CAACC,IAAI,CAAC;EAC5C;EAAC,QAAAC,CAAA,G;qBAXUd,qBAAqB;EAAA;EAAA,QAAAe,EAAA,G;WAArBf,qBAAqB;IAAAgB,OAAA,EAArBhB,qBAAqB,CAAAiB,IAAA;IAAAC,UAAA,EAFpB;EAAM;;SAEPlB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}