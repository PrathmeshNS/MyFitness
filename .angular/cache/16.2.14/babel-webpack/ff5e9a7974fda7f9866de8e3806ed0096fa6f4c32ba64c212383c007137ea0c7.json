{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet MemberViewComponent = class MemberViewComponent {\n  constructor(memberService, router, materialService, bookingStatusMaterial) {\n    this.memberService = memberService;\n    this.router = router;\n    this.materialService = materialService;\n    this.bookingStatusMaterial = bookingStatusMaterial;\n    this.bookedMaterial = false;\n    this.showMaterialContent = true;\n    this.count = 0;\n    this.memberDetails = {\n      memberId: 0,\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      gender: '',\n      mobileNo: '',\n      forgetPasswordAnswer: '',\n      confirmPassword: ''\n    };\n    this.bookedMaterialShow = [];\n    this.material = [];\n    this.myPassword = ['**************7e8j5j6', '**************7e88jg', '**************7e8uhgs', '**************7e932s', '**************g58d2s', '**************we3k2s', '**************fh983s'];\n    if (localStorage.getItem(\"memberEmail\") == null) {\n      alert(\"Please Login as Member\");\n      router.navigate(['member']);\n    } else {\n      this.memberDetails = memberService.serviceMemberData;\n      this.checkMemberMaterial(this.memberDetails.memberId);\n    }\n  }\n  ngOnInit() {\n    this.materialService.getAllMaterial().subscribe({\n      next: value => {\n        this.material = value;\n      },\n      error: error => {}\n    });\n  }\n  showUserProfile() {\n    this.showMaterialContent = false;\n  }\n  goBackToMaterial() {\n    this.showMaterialContent = true;\n  }\n  generateRandomePassword() {\n    const randomIndex = Math.floor(Math.random() * this.myPassword.length);\n    return this.myPassword[randomIndex];\n  }\n  logout() {\n    this.memberDetails.email = \"\";\n    this.memberDetails.password = \"\";\n    this.removeLocalStorage();\n    this.router.navigate(['./']);\n  }\n  viewMaterial(materialId) {}\n  bookMaterial(materialId) {\n    this.bookingStatusMaterial.bookMaterial(this.memberDetails.memberId, materialId).subscribe({\n      next: value => {\n        if (value) {\n          this.reloadPage();\n        }\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  checkMemberMaterial(memberId) {\n    this.bookingStatusMaterial.checkMemberMaterial(memberId).subscribe({\n      next: value => {\n        if (value != null) {\n          this.bookedMaterialShow = value;\n          if (this.bookedMaterialShow.pop()) {\n            this.bookedMaterial = true;\n          }\n        }\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  removeLocalStorage() {\n    localStorage.clear();\n  }\n  reloadPage() {\n    window.location.reload();\n  }\n};\nMemberViewComponent = __decorate([Component({\n  selector: 'app-member-view',\n  templateUrl: './member-view.component.html',\n  styleUrls: ['./member-view.component.css']\n})], MemberViewComponent);\nexport { MemberViewComponent };","map":{"version":3,"names":["Component","MemberViewComponent","constructor","memberService","router","materialService","bookingStatusMaterial","bookedMaterial","showMaterialContent","count","memberDetails","memberId","firstName","lastName","email","password","gender","mobileNo","forgetPasswordAnswer","confirmPassword","bookedMaterialShow","material","myPassword","localStorage","getItem","alert","navigate","serviceMemberData","checkMemberMaterial","ngOnInit","getAllMaterial","subscribe","next","value","error","showUserProfile","goBackToMaterial","generateRandomePassword","randomIndex","Math","floor","random","length","logout","removeLocalStorage","viewMaterial","materialId","bookMaterial","reloadPage","err","console","log","pop","clear","window","location","reload","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\angular\\MyFitness\\src\\app\\member\\member-view\\member-view.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Material } from 'src/app/entity/material';\nimport { Member } from 'src/app/entity/member';\nimport { MaterialService } from 'src/app/services/material.service';\nimport { MemberService } from 'src/app/services/member.service';\nimport { LoginPageComponent } from '../member-login/login-page.component';\nimport { BookingStatusOfMaterial } from 'src/app/entity/bookingStatusOfMaterial';\nimport { BookingStatusService } from 'src/app/services/booking-status.service';\n\n@Component({\n  selector: 'app-member-view',\n  templateUrl: './member-view.component.html',\n  styleUrls: ['./member-view.component.css'],\n})\nexport class MemberViewComponent {\n  bookedMaterial = false;\n  showMaterialContent = true;\n\n  count = 0;\n  memberDetails: Member = {\n    memberId: 0,\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    gender: '',\n    mobileNo: '',\n    forgetPasswordAnswer: '',\n    confirmPassword: '',\n  };\n\n  bookedMaterialShow: BookingStatusOfMaterial[] = [];\n\n  material: Material[] = [];\n\n  constructor(private memberService: MemberService,\n    private router: Router,\n    private materialService: MaterialService,\n    private bookingStatusMaterial: BookingStatusService) {\n    if (localStorage.getItem(\"memberEmail\") == null) {\n      alert(\"Please Login as Member\")\n      router.navigate(['member'])\n    } else {\n      this.memberDetails = memberService.serviceMemberData\n      this.checkMemberMaterial(this.memberDetails.memberId)\n    }\n  }\n\n  ngOnInit() {\n    this.materialService.getAllMaterial().subscribe({\n      next: (value) => {\n        this.material = value;\n      },\n      error: (error) => {\n      },\n    });\n  }\n\n  showUserProfile() {\n    this.showMaterialContent = false;\n  }\n\n  goBackToMaterial() {\n    this.showMaterialContent = true;\n  }\n\n  private myPassword: string[] = [\n    '**************7e8j5j6',\n    '**************7e88jg',\n    '**************7e8uhgs',\n    '**************7e932s',\n    '**************g58d2s',\n    '**************we3k2s',\n    '**************fh983s',\n  ];\n\n  generateRandomePassword() {\n    const randomIndex = Math.floor(Math.random() * this.myPassword.length);\n    return this.myPassword[randomIndex];\n  }\n\n  logout() {\n    this.memberDetails.email = \"\"\n    this.memberDetails.password = \"\"\n    this.removeLocalStorage()\n    this.router.navigate(['./']);\n  }\n\n\n  viewMaterial(materialId: number) {\n\n  }\n\n\n  bookMaterial(materialId: number) {\n    this.bookingStatusMaterial.bookMaterial(this.memberDetails.memberId, materialId).subscribe({\n      next: (value) => {\n          if (value) {\n            this.reloadPage()\n          }\n      },\n      error: (err) => {\n        console.log(err)\n      },\n    })\n  }\n\n  private checkMemberMaterial(memberId: number) {\n    this.bookingStatusMaterial.checkMemberMaterial(memberId).subscribe({\n      next: (value) => {\n        if (value != null) {\n          this.bookedMaterialShow = value;\n          if (this.bookedMaterialShow.pop()) {\n            this.bookedMaterial = true\n          }\n        }\n      },\n      error: (err) => {\n        console.log(err)\n      },\n    })\n  }\n\n  private removeLocalStorage() {\n    localStorage.clear()\n  }\n  private reloadPage(){\n    window.location.reload()\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}