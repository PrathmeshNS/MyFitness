{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/trainer.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction TrainerLoginComponent_p_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p\");\n  }\n}\nfunction TrainerLoginComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 23);\n    i0.ɵɵtext(1, \"Please enter your login and password!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrainerLoginComponent_ng_template_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 24);\n    i0.ɵɵtext(1, \" Username and Password Not Found \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrainerLoginComponent_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Email is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrainerLoginComponent_div_20_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Pattern should be \");\n    i0.ɵɵelementStart(2, \"b\");\n    i0.ɵɵtext(3, \"\\\"john@gmail.com\\\" \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TrainerLoginComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, TrainerLoginComponent_div_20_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵtemplate(2, TrainerLoginComponent_div_20_div_2_Template, 4, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r6 = i0.ɵɵreference(19);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r6.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r6.errors[\"pattern\"]);\n  }\n}\nfunction TrainerLoginComponent_div_24_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrainerLoginComponent_div_24_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password must be at least 8 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrainerLoginComponent_div_24_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" 1 UpperCase, 1 LowerCase Latter and Also Contain Number \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrainerLoginComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, TrainerLoginComponent_div_24_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵtemplate(2, TrainerLoginComponent_div_24_div_2_Template, 2, 0, \"div\", 26);\n    i0.ɵɵtemplate(3, TrainerLoginComponent_div_24_div_3_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r8 = i0.ɵɵreference(23);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r8.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r8.errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r8.errors[\"pattern\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nconst _c1 = function () {\n  return [\"/register\"];\n};\nclass TrainerLoginComponent {\n  constructor(trainerService, router) {\n    this.trainerService = trainerService;\n    this.router = router;\n    this.showLogin = true;\n    this.showForgetSection = true;\n    this.msg = true;\n    this.loginError = true;\n    this.confirmPassword = true;\n    this.member = {\n      memberId: 0,\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      gender: '',\n      mobileNo: '',\n      forgetPasswordAnswer: '',\n      confirmPassword: ''\n    };\n  }\n  ngOnInit() {\n    if (localStorage.length > 0) {\n      this.setLocalStorage();\n      this.onSubmit();\n    }\n  }\n  onSubmit() {\n    this.trainerService.loginTrainer(this.member).subscribe({\n      next: value => {\n        localStorage.setItem('email', this.member.email);\n        localStorage.setItem('password', this.member.password);\n        this.router.navigate(['member']);\n      },\n      error: err => {\n        this.loginError = false;\n      }\n    });\n  }\n  // onCheck() {\n  //   this.trainerService.checkForgetPassword(this.member).subscribe({\n  //     next: (value) => {\n  //       this.showForgetSection = false;\n  //       this.member.password = \"\";\n  //     },\n  //     error: (err) => {\n  //       this.msg = false;\n  //     },\n  //   });\n  // }\n  // onChangePassword() {\n  //   if (this.member.password.match(this.member.confirmPassword)) {\n  //     this.trainerService.updatePassword(this.member).subscribe({\n  //       next: (value) => {\n  //         this.showLogin = true\n  //         this.member.email = \"\"\n  //         this.member.password = \"\"\n  //       },\n  //       error: (err) => {\n  //       },\n  //     });\n  //   }\n  //   else{\n  //     this.confirmPassword = false\n  //   }\n  // }\n  setLocalStorage() {\n    this.email = localStorage.getItem('email');\n    this.password = localStorage.getItem('password');\n    this.member.email = this.email.toString();\n    this.member.password = this.password.toString();\n  }\n  static #_ = this.ɵfac = function TrainerLoginComponent_Factory(t) {\n    return new (t || TrainerLoginComponent)(i0.ɵɵdirectiveInject(i1.TrainerService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TrainerLoginComponent,\n    selectors: [[\"app-trainer-login\"]],\n    decls: 33,\n    vars: 15,\n    consts: [[1, \"vh-100\", \"gradient-custom\"], [1, \"container\", \"py-5\", \"h-100\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"h-100\"], [1, \"col-12\", \"col-md-8\", \"col-lg-6\", \"col-xl-5\"], [1, \"card\", \"text-white\", 2, \"border-radius\", \"1rem\"], [1, \"card-body\", \"p-5\", \"text-center\"], [1, \"mt-md-4\", \"pb-5\"], [1, \"fw-bold\", \"mb-2\", \"text-uppercase\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"showText\", \"\"], [\"showError\", \"\"], [\"name\", \"form\", 1, \"form-alignment\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [\"data-mdb-input-init\", \"\", 1, \"form-outline\", \"form-white\", \"mb-4\"], [\"type\", \"email\", \"name\", \"email\", \"required\", \"\", \"minlength\", \"4\", \"placeholder\", \"Enter Your Email\", \"pattern\", \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"email\", \"ngModel\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"password\", \"name\", \"password\", \"autocomplete\", \"off\", \"placeholder\", \"Enter Your Password\", \"minlength\", \"8\", \"pattern\", \"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\", \"required\", \"\", 1, \"form-control\", \"form-control-lg\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"password\", \"ngModel\"], [1, \"forget-password\", 3, \"click\"], [\"data-mdb-button-init\", \"\", \"data-mdb-ripple-init\", \"\", \"type\", \"submit\", 1, \"btn\", \"btn-outline-light\", \"btn-lg\", \"px-5\"], [1, \"user-register\"], [3, \"routerLink\"], [1, \"text-white-50\", \"mb-5\"], [1, \"text-50\", \"mb-5\", 2, \"color\", \"red\"], [1, \"invalid-feedback\"], [4, \"ngIf\"]],\n    template: function TrainerLoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r15 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"body\")(1, \"section\", 0)(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"div\", 6)(8, \"h2\", 7);\n        i0.ɵɵtext(9, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, TrainerLoginComponent_p_10_Template, 1, 0, \"p\", 8);\n        i0.ɵɵtemplate(11, TrainerLoginComponent_ng_template_11_Template, 2, 0, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(13, TrainerLoginComponent_ng_template_13_Template, 2, 0, \"ng-template\", null, 10, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementStart(15, \"form\", 11, 12);\n        i0.ɵɵlistener(\"ngSubmit\", function TrainerLoginComponent_Template_form_ngSubmit_15_listener() {\n          i0.ɵɵrestoreView(_r15);\n          const _r5 = i0.ɵɵreference(16);\n          return i0.ɵɵresetView(_r5.form.valid && ctx.onSubmit());\n        });\n        i0.ɵɵelementStart(17, \"div\", 13)(18, \"input\", 14, 15);\n        i0.ɵɵlistener(\"ngModelChange\", function TrainerLoginComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.member.email = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(20, TrainerLoginComponent_div_20_Template, 3, 2, \"div\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 13)(22, \"input\", 17, 18);\n        i0.ɵɵlistener(\"ngModelChange\", function TrainerLoginComponent_Template_input_ngModelChange_22_listener($event) {\n          return ctx.member.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(24, TrainerLoginComponent_div_24_Template, 4, 3, \"div\", 16);\n        i0.ɵɵelementStart(25, \"a\", 19);\n        i0.ɵɵlistener(\"click\", function TrainerLoginComponent_Template_a_click_25_listener() {\n          return ctx.showLogin = false;\n        });\n        i0.ɵɵtext(26, \"Forget Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"button\", 20);\n        i0.ɵɵtext(28, \" Login \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"p\", 21);\n        i0.ɵɵtext(30, \" Don't Have account? \");\n        i0.ɵɵelementStart(31, \"a\", 22);\n        i0.ɵɵtext(32, \"Register Here\");\n        i0.ɵɵelementEnd()()()()()()()()()();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(12);\n        const _r3 = i0.ɵɵreference(14);\n        const _r5 = i0.ɵɵreference(16);\n        const _r6 = i0.ɵɵreference(19);\n        const _r8 = i0.ɵɵreference(23);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginError)(\"ngIfThen\", _r1)(\"ngIfElse\", _r3);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.member.email)(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, _r5.submitted && _r6.errors));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r5.submitted && _r6.errors);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.member.password)(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, _r5.submitted && _r8.errors));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r5.submitted && _r8.errors);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(14, _c1));\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgIf, i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinLengthValidator, i4.PatternValidator, i4.NgModel, i4.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { TrainerLoginComponent };","map":{"version":3,"names":["i0","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","TrainerLoginComponent_div_20_div_1_Template","TrainerLoginComponent_div_20_div_2_Template","ɵɵadvance","ɵɵproperty","_r6","errors","TrainerLoginComponent_div_24_div_1_Template","TrainerLoginComponent_div_24_div_2_Template","TrainerLoginComponent_div_24_div_3_Template","_r8","TrainerLoginComponent","constructor","trainerService","router","showLogin","showForgetSection","msg","loginError","confirmPassword","member","memberId","firstName","lastName","email","password","gender","mobileNo","forgetPasswordAnswer","ngOnInit","localStorage","length","setLocalStorage","onSubmit","loginTrainer","subscribe","next","value","setItem","navigate","error","err","getItem","toString","_","ɵɵdirectiveInject","i1","TrainerService","i2","Router","_2","selectors","decls","vars","consts","template","TrainerLoginComponent_Template","rf","ctx","TrainerLoginComponent_p_10_Template","TrainerLoginComponent_ng_template_11_Template","ɵɵtemplateRefExtractor","TrainerLoginComponent_ng_template_13_Template","ɵɵlistener","TrainerLoginComponent_Template_form_ngSubmit_15_listener","ɵɵrestoreView","_r15","_r5","ɵɵreference","ɵɵresetView","form","valid","TrainerLoginComponent_Template_input_ngModelChange_18_listener","$event","TrainerLoginComponent_div_20_Template","TrainerLoginComponent_Template_input_ngModelChange_22_listener","TrainerLoginComponent_div_24_Template","TrainerLoginComponent_Template_a_click_25_listener","_r1","_r3","ɵɵpureFunction1","_c0","submitted","ɵɵpureFunction0","_c1"],"sources":["D:\\angular\\MyFitness\\src\\app\\trainer\\trainer-login\\trainer-login.component.ts","D:\\angular\\MyFitness\\src\\app\\trainer\\trainer-login\\trainer-login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TrainerService } from 'src/app/services/trainer.service';\n\n@Component({\n  selector: 'app-trainer-login',\n  templateUrl: './trainer-login.component.html',\n  styleUrls: ['./trainer-login.component.css']\n})\nexport class TrainerLoginComponent {\n  showLogin = true;\n  showForgetSection = true;\n  email: any;\n  password: any;\n  msg = true;\n  loginError = true;\n  confirmPassword= true;\n\n  member: Member = {\n    memberId: 0,\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    gender: '',\n    mobileNo: '',\n    forgetPasswordAnswer: '',\n    confirmPassword: ''\n  };\n\n  constructor(private trainerService: TrainerService, private router: Router) {}\n\n  ngOnInit() {\n    if (localStorage.length > 0) {\n      this.setLocalStorage();\n      this.onSubmit();\n    }\n  }\n\n  onSubmit() {\n    this.trainerService.loginTrainer(this.member).subscribe({\n      next: (value) => {\n        localStorage.setItem('email', this.member.email);\n        localStorage.setItem('password', this.member.password);\n        this.router.navigate(['member']);\n      },\n      error: (err) => {\n        this.loginError = false\n      },\n    });\n  }\n\n  // onCheck() {\n  //   this.trainerService.checkForgetPassword(this.member).subscribe({\n  //     next: (value) => {\n  //       this.showForgetSection = false;\n  //       this.member.password = \"\";\n  //     },\n  //     error: (err) => {\n  //       this.msg = false;\n  //     },\n  //   });\n  // }\n\n  // onChangePassword() {\n  //   if (this.member.password.match(this.member.confirmPassword)) {\n  //     this.trainerService.updatePassword(this.member).subscribe({\n  //       next: (value) => {\n  //         this.showLogin = true\n  //         this.member.email = \"\"\n  //         this.member.password = \"\"\n  //       },\n  //       error: (err) => {\n  //       },\n  //     });\n  //   }\n  //   else{\n  //     this.confirmPassword = false\n  //   }\n  // }\n\n  setLocalStorage() {\n    this.email = localStorage.getItem('email');\n    this.password = localStorage.getItem('password');\n    this.member.email = this.email.toString();\n    this.member.password = this.password.toString();\n  }\n}\n","<body>\n    <!-- <div *ngIf=\"showLogin; then loginPage; else forgetPassword\"></div> -->\n    <!-- <ng-template #loginPage> -->\n      <section class=\"vh-100 gradient-custom \" >\n        <div class=\"container py-5 h-100\" >\n          <div class=\"row d-flex justify-content-center align-items-center h-100\">\n            <div class=\"col-12 col-md-8 col-lg-6 col-xl-5\">\n              <div class=\"card text-white\" style=\"border-radius: 1rem; \">\n                <div class=\"card-body p-5 text-center\">\n                  <div class=\"mt-md-4 pb-5\">\n                    <h2 class=\"fw-bold mb-2 text-uppercase\">Login</h2>\n                    <p *ngIf=\"loginError then showText else showError\"></p>\n                    <ng-template #showText>\n                      <p class=\"text-white-50 mb-5\">Please enter your login and password!</p>\n                    </ng-template>\n                    <ng-template #showError>\n                      <p style=\"color: red;\" class=\"text-50 mb-5\">\n                        Username and Password Not Found\n                      </p>\n                    </ng-template>\n                    <form name=\"form\" class=\"form-alignment\" #f=\"ngForm\" (ngSubmit)=\"f.form.valid && onSubmit()\">\n                      <div data-mdb-input-init class=\"form-outline form-white mb-4\">\n                        <input type=\"email\" class=\"form-control form-control-lg\" name=\"email\" [(ngModel)]=\"member.email\"\n                          #email=\"ngModel\" [ngClass]=\"{\n                            'is-invalid': f.submitted && email.errors\n                          }\" required minlength=\"4\" placeholder=\"Enter Your Email\"\n                          pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" />\n                        <div *ngIf=\"f.submitted && email.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"email.errors['required']\">\n                            Email is required\n                          </div>\n                          <div *ngIf=\"email.errors['pattern']\">\n                            Pattern should be <b>\"john@gmail.com\" </b>\n                          </div>\n                        </div>\n                      </div>\n                      <div data-mdb-input-init class=\"form-outline form-white mb-4\">\n                        <input type=\"password\" class=\"form-control form-control-lg\" name=\"password\"\n                          [(ngModel)]=\"member.password\" #password=\"ngModel\" [ngClass]=\"{\n                            'is-invalid': f.submitted && password.errors\n                          }\" autocomplete=\"off\" placeholder=\"Enter Your Password\" minlength=\"8\"\n                          pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" required />\n                        <div *ngIf=\"f.submitted && password.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"password.errors['required']\">\n                            Password is required\n                          </div>\n                          <div *ngIf=\"password.errors['minlength']\">\n                            Password must be at least 8 characters\n                          </div>\n                          <div *ngIf=\"password.errors['pattern']\">\n                            1 UpperCase, 1 LowerCase Latter and Also Contain\n                            Number\n                          </div>\n                        </div>\n                        <a class=\"forget-password\" (click)=\"showLogin = false\">Forget Password</a>\n                      </div>\n                      <button data-mdb-button-init data-mdb-ripple-init class=\"btn btn-outline-light btn-lg px-5\"\n                        type=\"submit\">\n                        Login\n                      </button>\n                    </form>\n                    <p class=\"user-register\">\n                      Don't Have account?\n                      <a [routerLink]=\"['/register']\">Register Here</a>\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    <!-- </ng-template> -->\n  \n    <!-- <ng-template #forgetPassword>\n      <div *ngIf=\"showForgetSection; then showForget; else changePassword\"></div>\n    </ng-template>\n    <ng-template #showForget>\n      <section class=\"vh-100 gradient-custom\">\n        <div class=\"container py-5 h-100\">\n          <div class=\"row d-flex justify-content-center align-items-center h-100\">\n            <div class=\"col-12 col-md-8 col-lg-6 col-xl-5\">\n              <div class=\"card text-white\" style=\"border-radius: 1rem\">\n              <a style=\"margin: 16px 0 -0 27px; cursor: pointer; color: wheat;\" (click)=\"showLogin = true\" >back</a>\n                <div class=\"card-body p-5 text-center\">\n                  <div class=\"md-4 pb-5\">\n                    <p *ngIf=\"msg; then showText else showError  \"></p>\n                    <ng-template #showText>\n                      <p class=\"text-white-50 mb-5\">\n                        Try To remember your forget Passworcd\n                      </p>\n                    </ng-template>\n                    <ng-template #showError>\n                      <p style=\"color: red;\" class=\"text-50 mb-5\">\n                        forget Password Doesn't Match :(\n                      </p>\n                    </ng-template>\n                    <form name=\"form\" class=\"form-alignment\" #f=\"ngForm\" (ngSubmit)=\"f.form.valid && onCheck()\">\n                      <div class=\"mb-1 w-30 container\">\n                        <div class=\"selected-item\">\n                          <label class=\"text-light\" for=\"cars\">Choose a Question :</label>\n                          <br />\n                          <select class=\"form-select form-select-lg\" aria-label=\".form-select-sm example\">\n                            <option value=\"1\">Where you born</option>\n                            <hr />\n                            <option value=\"2\">\n                              What is your favourite teacher name\n                            </option>\n                            <hr />\n                            <option value=\"3\">Your someone Special name</option>\n                          </select>\n                        </div>\n                        <div class=\"mb-1 w-100 container\">\n                          <input type=\"text\" class=\"form-control mt-3 py-3\" name=\"forgetPasswordAnswer\"\n                            [(ngModel)]=\"member.forgetPasswordAnswer\" #forgetPasswordAnswer=\"ngModel\" [ngClass]=\"{\n                              'is-invalid':\n                                f.submitted && forgetPasswordAnswer.errors\n                            }\" autocomplete=\"off\" required placeholder=\"Enter Your Forget Password Answer\" />\n                          <div *ngIf=\"f.submitted && forgetPasswordAnswer.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"forgetPasswordAnswer.errors['required']\">\n                              Forget Password Answer is required\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <button data-mdb-button-init data-mdb-ripple-init class=\"btn btn-outline-light btn-lg px-5 mt-3\"\n                        type=\"submit\">\n                        Check\n                      </button>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </ng-template> -->\n    <!-- <ng-template #changePassword>\n      <section class=\"vh-100 gradient-custom\">\n        <div class=\"container py-5 h-100\">\n          <div class=\"row d-flex justify-content-center align-items-center h-100\">\n            <div class=\"col-12 col-md-8 col-lg-6 col-xl-5\">\n              <div class=\"card bg-dark text-white\" style=\"border-radius: 1rem\">\n                <div class=\"card-body p-5 text-center\">\n                  <div class=\"mt-md-4 pb-5\">\n                    <p *ngIf=\"confirmPassword then showText else showError\"></p>\n                    <ng-template #showText>\n                      <p class=\"text-white mb-5\">\n                        Enter Password that you want to change\n                      </p>\n                    </ng-template>\n                    <ng-template #showError>\n                      <p class=\"text-danger mb-5\">Password and confirm Password doesn't Matched </p>\n                    </ng-template>\n                    <form name=\"form\" class=\"form-alignment\" #f=\"ngForm\" (ngSubmit)=\"f.form.valid && onChangePassword()\">\n                      <div style=\"width: 80%;\" class=\"mb-3 container\">\n                        <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"member.password\"\n                          #password=\"ngModel\" [ngClass]=\"{\n                            'is-invalid': f.submitted && password.errors\n                          }\" autocomplete=\"off\" placeholder=\"Enter Your Password\" minlength=\"8\"\n                          pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" required />\n                        <div *ngIf=\"f.submitted && password.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"password.errors['required']\">\n                            Password is required\n                          </div>\n                          <div *ngIf=\"password.errors['minlength']\">\n                            Password must be at least 8 characters\n                          </div>\n                          <div *ngIf=\"password.errors['pattern']\">\n                            1 UpperCase, 1 LowerCase Latter and Also Contain\n                            Number\n                          </div>\n                        </div>\n                      </div>\n                      <div style=\"width: 80%;\" class=\"mb-3 container\">\n                        <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"member.confirmPassword\"\n                          #password=\"ngModel\" [ngClass]=\"{\n                            'is-invalid': f.submitted && password.errors\n                          }\" autocomplete=\"off\" placeholder=\"Enter Confirm Password\" minlength=\"8\"\n                          pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" required />\n                        <div *ngIf=\"f.submitted && password.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"password.errors['required']\">\n                            Password is required\n                          </div>\n                          <div *ngIf=\"password.errors['minlength']\">\n                            Password must be at least 8 characters\n                          </div>\n                          <div *ngIf=\"password.errors['pattern']\">\n                            1 UpperCase, 1 LowerCase Latter and Also Contain\n                            Number\n                          </div>\n                        </div>\n                      </div>\n                      <button data-mdb-button-init data-mdb-ripple-init class=\"btn btn-outline-light btn-lg px-5 mt-3\"\n                        type=\"submit\">\n                        Change Password\n                      </button>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </ng-template> -->\n  </body>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}