{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet TrainerViewComponent = class TrainerViewComponent {\n  constructor(trainerService, router, materialService) {\n    this.trainerService = trainerService;\n    this.router = router;\n    this.materialService = materialService;\n    this.showTrainerProfile = false;\n    this.material = [];\n    this.trainerDetails = {\n      trainer_id: 0,\n      fullName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      mobileNo: '',\n      forgetPasswordAnswer: '',\n      approve: false,\n      aqaureByMember: 0,\n      gender: ''\n    };\n    this.myPassword = ['**************7e8j5j6', '**************7e88jg', '**************7e8uhgs', '**************7e932s', '**************g58d2s', '**************we3k2s', '**************fh983s'];\n    if (localStorage.getItem(\"tEmail\") == null) {\n      alert(\"Please Login as Trainer\");\n      router.navigate(['trainer']);\n    } else {\n      this.trainerDetails = trainerService.trainerServiceDetails;\n    }\n  }\n  generateRandomePassword() {\n    const randomIndex = Math.floor(Math.random() * this.myPassword.length);\n    return this.myPassword[randomIndex];\n  }\n  getAllMaterrial() {\n    this.materialService.getAllMaterial().subscribe({\n      next: value => {\n        console.log(value);\n        this.material = value;\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n};\nTrainerViewComponent = __decorate([Component({\n  selector: 'app-trainer-view',\n  templateUrl: './trainer-view.component.html',\n  styleUrls: ['./trainer-view.component.css']\n})], TrainerViewComponent);\nexport { TrainerViewComponent };","map":{"version":3,"names":["Component","TrainerViewComponent","constructor","trainerService","router","materialService","showTrainerProfile","material","trainerDetails","trainer_id","fullName","email","password","confirmPassword","mobileNo","forgetPasswordAnswer","approve","aqaureByMember","gender","myPassword","localStorage","getItem","alert","navigate","trainerServiceDetails","generateRandomePassword","randomIndex","Math","floor","random","length","getAllMaterrial","getAllMaterial","subscribe","next","value","console","log","error","err","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\angular\\MyFitness\\src\\app\\trainer\\trainer-view\\trainer-view.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Material } from 'src/app/entity/material';\nimport { Trainer } from 'src/app/entity/trainer';\nimport { MaterialService } from 'src/app/services/material.service';\nimport { TrainerService } from 'src/app/services/trainer.service';\n\n@Component({\n  selector: 'app-trainer-view',\n  templateUrl: './trainer-view.component.html',\n  styleUrls: ['./trainer-view.component.css']\n})\nexport class TrainerViewComponent {\n  showTrainerProfile = false;\n\n  trainerName: any;\n  material: Material[] = [];\n\n\n  trainerDetails: Trainer = {\n    trainer_id: 0,\n    fullName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    mobileNo: '',\n    forgetPasswordAnswer: '',\n    approve: false,\n    aqaureByMember: 0,\n    gender: ''\n  }\n\n\n  constructor(private trainerService: TrainerService, private router:Router, private materialService: MaterialService) {\n    if (localStorage.getItem(\"tEmail\")==null) {\n      alert(\"Please Login as Trainer\")\n      router.navigate(['trainer'])\n    }else{\n      this.trainerDetails = trainerService.trainerServiceDetails\n    }\n  }\n\n\n  private myPassword: string[] = [\n    '**************7e8j5j6',\n    '**************7e88jg',\n    '**************7e8uhgs',\n    '**************7e932s',\n    '**************g58d2s',\n    '**************we3k2s',\n    '**************fh983s',\n  ];\n\n  generateRandomePassword() {\n    const randomIndex = Math.floor(Math.random() * this.myPassword.length);\n    return this.myPassword[randomIndex];\n  }\n\n  getAllMaterrial(){\n    this.materialService.getAllMaterial().subscribe({\n      next:(value)=> {\n         console.log(value)\n         this.material = value\n      },\n      error:(err) =>{\n          console.log(err)\n      },\n    })\n\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAYzC,IAAaC,oBAAoB,GAAjC,MAAaA,oBAAoB;EAqB/BC,YAAoBC,cAA8B,EAAUC,MAAa,EAAUC,eAAgC;IAA/F,KAAAF,cAAc,GAAdA,cAAc;IAA0B,KAAAC,MAAM,GAANA,MAAM;IAAiB,KAAAC,eAAe,GAAfA,eAAe;IApBlG,KAAAC,kBAAkB,GAAG,KAAK;IAG1B,KAAAC,QAAQ,GAAe,EAAE;IAGzB,KAAAC,cAAc,GAAY;MACxBC,UAAU,EAAE,CAAC;MACbC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,QAAQ,EAAE,EAAE;MACZC,oBAAoB,EAAE,EAAE;MACxBC,OAAO,EAAE,KAAK;MACdC,cAAc,EAAE,CAAC;MACjBC,MAAM,EAAE;KACT;IAaO,KAAAC,UAAU,GAAa,CAC7B,uBAAuB,EACvB,sBAAsB,EACtB,uBAAuB,EACvB,sBAAsB,EACtB,sBAAsB,EACtB,sBAAsB,EACtB,sBAAsB,CACvB;IAjBC,IAAIC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,IAAE,IAAI,EAAE;MACxCC,KAAK,CAAC,yBAAyB,CAAC;MAChClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;KAC7B,MAAI;MACH,IAAI,CAACf,cAAc,GAAGL,cAAc,CAACqB,qBAAqB;;EAE9D;EAaAC,uBAAuBA,CAAA;IACrB,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,IAAI,CAACV,UAAU,CAACW,MAAM,CAAC;IACtE,OAAO,IAAI,CAACX,UAAU,CAACO,WAAW,CAAC;EACrC;EAEAK,eAAeA,CAAA;IACb,IAAI,CAAC1B,eAAe,CAAC2B,cAAc,EAAE,CAACC,SAAS,CAAC;MAC9CC,IAAI,EAAEC,KAAK,IAAG;QACXC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClB,IAAI,CAAC5B,QAAQ,GAAG4B,KAAK;MACxB,CAAC;MACDG,KAAK,EAAEC,GAAG,IAAI;QACVH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MACpB;KACD,CAAC;EAEJ;CACD;AA1DYtC,oBAAoB,GAAAuC,UAAA,EALhCxC,SAAS,CAAC;EACTyC,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACW1C,oBAAoB,CA0DhC;SA1DYA,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}