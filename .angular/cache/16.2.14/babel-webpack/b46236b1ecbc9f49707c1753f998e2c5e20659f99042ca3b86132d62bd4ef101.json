{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet TrainerLoginComponent = class TrainerLoginComponent {\n  constructor(trainerService, router) {\n    this.trainerService = trainerService;\n    this.router = router;\n    this.showLogin = true;\n    this.showForgetSection = true;\n    this.msg = true;\n    this.loginError = true;\n    this.confirmPassword = true;\n    this.member = {\n      memberId: 0,\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      gender: '',\n      mobileNo: '',\n      forgetPasswordAnswer: '',\n      confirmPassword: ''\n    };\n  }\n  ngOnInit() {\n    if (localStorage.length > 0) {\n      this.setLocalStorage();\n      this.onSubmit();\n    }\n  }\n  onSubmit() {\n    this.trainerService.loginMember(this.member).subscribe({\n      next: value => {\n        localStorage.setItem('email', this.member.email);\n        localStorage.setItem('password', this.member.password);\n        this.trainerService.serviceMemberData = value;\n        this.router.navigate(['member']);\n      },\n      error: err => {\n        this.loginError = false;\n      }\n    });\n  }\n  onCheck() {\n    this.trainerService.checkForgetPassword(this.member).subscribe({\n      next: value => {\n        this.showForgetSection = false;\n        this.member.password = \"\";\n      },\n      error: err => {\n        this.msg = false;\n      }\n    });\n  }\n  setLocalStorage() {\n    this.email = localStorage.getItem('email');\n    this.password = localStorage.getItem('password');\n    this.member.email = this.email.toString();\n    this.member.password = this.password.toString();\n  }\n};\nTrainerLoginComponent = __decorate([Component({\n  selector: 'app-trainer-login',\n  templateUrl: './trainer-login.component.html',\n  styleUrls: ['./trainer-login.component.css']\n})], TrainerLoginComponent);\nexport { TrainerLoginComponent };","map":{"version":3,"names":["Component","TrainerLoginComponent","constructor","trainerService","router","showLogin","showForgetSection","msg","loginError","confirmPassword","member","memberId","firstName","lastName","email","password","gender","mobileNo","forgetPasswordAnswer","ngOnInit","localStorage","length","setLocalStorage","onSubmit","loginMember","subscribe","next","value","setItem","serviceMemberData","navigate","error","err","onCheck","checkForgetPassword","getItem","toString","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\angular\\MyFitness\\src\\app\\trainer\\trainer-login\\trainer-login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { TrainerService } from 'src/app/services/trainer.service';\n\n@Component({\n  selector: 'app-trainer-login',\n  templateUrl: './trainer-login.component.html',\n  styleUrls: ['./trainer-login.component.css']\n})\nexport class TrainerLoginComponent {\n  showLogin = true;\n  showForgetSection = true;\n  email: any;\n  password: any;\n  msg = true;\n  loginError = true;\n  confirmPassword= true;\n\n  member: Member = {\n    memberId: 0,\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    gender: '',\n    mobileNo: '',\n    forgetPasswordAnswer: '',\n    confirmPassword: ''\n  };\n\n  constructor(private trainerService: TrainerService, private router: Router) {}\n\n  ngOnInit() {\n    if (localStorage.length > 0) {\n      this.setLocalStorage();\n      this.onSubmit();\n    }\n  }\n\n  onSubmit() {\n    this.trainerService.loginMember(this.member).subscribe({\n      next: (value) => {\n        localStorage.setItem('email', this.member.email);\n        localStorage.setItem('password', this.member.password);\n        this.trainerService.serviceMemberData = value;\n        this.router.navigate(['member']);\n      },\n      error: (err) => {\n        this.loginError = false\n      },\n    });\n  }\n\n  onCheck() {\n    this.trainerService.checkForgetPassword(this.member).subscribe({\n      next: (value) => {\n        this.showForgetSection = false;\n        this.member.password = \"\";\n      },\n      error: (err) => {\n        this.msg = false;\n      },\n    });\n  }\n\n  setLocalStorage() {\n    this.email = localStorage.getItem('email');\n    this.password = localStorage.getItem('password');\n    this.member.email = this.email.toString();\n    this.member.password = this.password.toString();\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAQzC,IAAaC,qBAAqB,GAAlC,MAAaA,qBAAqB;EAqBhCC,YAAoBC,cAA8B,EAAUC,MAAc;IAAtD,KAAAD,cAAc,GAAdA,cAAc;IAA0B,KAAAC,MAAM,GAANA,MAAM;IApBlE,KAAAC,SAAS,GAAG,IAAI;IAChB,KAAAC,iBAAiB,GAAG,IAAI;IAGxB,KAAAC,GAAG,GAAG,IAAI;IACV,KAAAC,UAAU,GAAG,IAAI;IACjB,KAAAC,eAAe,GAAE,IAAI;IAErB,KAAAC,MAAM,GAAW;MACfC,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,oBAAoB,EAAE,EAAE;MACxBT,eAAe,EAAE;KAClB;EAE4E;EAE7EU,QAAQA,CAAA;IACN,IAAIC,YAAY,CAACC,MAAM,GAAG,CAAC,EAAE;MAC3B,IAAI,CAACC,eAAe,EAAE;MACtB,IAAI,CAACC,QAAQ,EAAE;;EAEnB;EAEAA,QAAQA,CAAA;IACN,IAAI,CAACpB,cAAc,CAACqB,WAAW,CAAC,IAAI,CAACd,MAAM,CAAC,CAACe,SAAS,CAAC;MACrDC,IAAI,EAAGC,KAAK,IAAI;QACdP,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAE,IAAI,CAAClB,MAAM,CAACI,KAAK,CAAC;QAChDM,YAAY,CAACQ,OAAO,CAAC,UAAU,EAAE,IAAI,CAAClB,MAAM,CAACK,QAAQ,CAAC;QACtD,IAAI,CAACZ,cAAc,CAAC0B,iBAAiB,GAAGF,KAAK;QAC7C,IAAI,CAACvB,MAAM,CAAC0B,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAClC,CAAC;MACDC,KAAK,EAAGC,GAAG,IAAI;QACb,IAAI,CAACxB,UAAU,GAAG,KAAK;MACzB;KACD,CAAC;EACJ;EAEAyB,OAAOA,CAAA;IACL,IAAI,CAAC9B,cAAc,CAAC+B,mBAAmB,CAAC,IAAI,CAACxB,MAAM,CAAC,CAACe,SAAS,CAAC;MAC7DC,IAAI,EAAGC,KAAK,IAAI;QACd,IAAI,CAACrB,iBAAiB,GAAG,KAAK;QAC9B,IAAI,CAACI,MAAM,CAACK,QAAQ,GAAG,EAAE;MAC3B,CAAC;MACDgB,KAAK,EAAGC,GAAG,IAAI;QACb,IAAI,CAACzB,GAAG,GAAG,KAAK;MAClB;KACD,CAAC;EACJ;EAEAe,eAAeA,CAAA;IACb,IAAI,CAACR,KAAK,GAAGM,YAAY,CAACe,OAAO,CAAC,OAAO,CAAC;IAC1C,IAAI,CAACpB,QAAQ,GAAGK,YAAY,CAACe,OAAO,CAAC,UAAU,CAAC;IAChD,IAAI,CAACzB,MAAM,CAACI,KAAK,GAAG,IAAI,CAACA,KAAK,CAACsB,QAAQ,EAAE;IACzC,IAAI,CAAC1B,MAAM,CAACK,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACqB,QAAQ,EAAE;EACjD;CACD;AA9DYnC,qBAAqB,GAAAoC,UAAA,EALjCrC,SAAS,CAAC;EACTsC,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWvC,qBAAqB,CA8DjC;SA9DYA,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}