{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  constructor(memberService, router) {\n    this.memberService = memberService;\n    this.router = router;\n    this.msg = \"\";\n    this.showForgetPasswordContent = false;\n    this.showRestPasswordContent = false;\n    this.memberData = {\n      email: '',\n      password: '',\n      forgetPasswordAnswer: '',\n      memberId: 0,\n      firstName: '',\n      lastName: '',\n      mobileNo: '',\n      gender: ''\n    };\n  }\n  onSubmit() {\n    this.memberService.loginMember(this.memberData).subscribe({\n      next: response => {\n        this.memberService.serviceMemberData = response;\n      },\n      error: err => {\n        this.msg = \"User Not Found\";\n      }\n    });\n  }\n  showForgetPassword() {\n    this.showForgetPasswordContent = true;\n  }\n  checkForgetPassword() {\n    this.memberService.checkForgetPassword(this.memberData).subscribe({\n      next: value => {\n        this.memberData.password = \"\";\n        this.showRestPasswordContent = true;\n      },\n      error: err => {}\n    });\n  }\n  restYourPassword() {\n    this.memberService.updatePassword(this.memberData).subscribe({\n      next: value => {\n        this.showForgetPasswordContent = false;\n        this.memberData.email = \"\";\n        this.memberData.password = \"\";\n      },\n      error: err => {}\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","LoginComponent","constructor","memberService","router","msg","showForgetPasswordContent","showRestPasswordContent","memberData","email","password","forgetPasswordAnswer","memberId","firstName","lastName","mobileNo","gender","onSubmit","loginMember","subscribe","next","response","serviceMemberData","error","err","showForgetPassword","checkForgetPassword","value","restYourPassword","updatePassword","__decorate","selector","templateUrl","styleUrls"],"sources":["G:\\angular\\GymManagementSystem\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Member } from '../entity/member';\nimport { MemberService } from '../services/member.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n\n  msg = \"\"\n\n  showForgetPasswordContent = false;\n  showRestPasswordContent = false;\n\n  memberData: Member = {\n    email: '',\n    password: '',\n    forgetPasswordAnswer: '',\n    memberId: 0,\n    firstName: '',\n    lastName: '',\n    mobileNo: '',\n    gender: ''\n  }\n\n  constructor(private memberService: MemberService, private router: Router) { }\n\n\n  onSubmit() {\n    this.memberService.loginMember(this.memberData).subscribe({\n      next: (response) => {\n        this.memberService.serviceMemberData = response\n      },\n      error: (err) => {\n        this.msg = \"User Not Found\"\n      },\n    })\n  }\n\n  showForgetPassword() {\n    this.showForgetPasswordContent = true;\n  }\n\n  checkForgetPassword() {\n    this.memberService.checkForgetPassword(this.memberData).subscribe({\n      next: (value) => {\n        this.memberData.password = \"\"\n        this.showRestPasswordContent = true\n      },\n      error: (err) => {\n      },\n    })\n  }\n\n  restYourPassword() {\n    this.memberService.updatePassword(this.memberData).subscribe({\n      next: (value) => {\n        this.showForgetPasswordContent = false;\n        this.memberData.email = \"\";\n        this.memberData.password = \"\";\n\n      },\n      error: (err) => {\n      },\n    })\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAUzC,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAmBzBC,YAAoBC,aAA4B,EAAUC,MAAc;IAApD,KAAAD,aAAa,GAAbA,aAAa;IAAyB,KAAAC,MAAM,GAANA,MAAM;IAhBhE,KAAAC,GAAG,GAAG,EAAE;IAER,KAAAC,yBAAyB,GAAG,KAAK;IACjC,KAAAC,uBAAuB,GAAG,KAAK;IAE/B,KAAAC,UAAU,GAAW;MACnBC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,oBAAoB,EAAE,EAAE;MACxBC,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;KACT;EAE2E;EAG5EC,QAAQA,CAAA;IACN,IAAI,CAACd,aAAa,CAACe,WAAW,CAAC,IAAI,CAACV,UAAU,CAAC,CAACW,SAAS,CAAC;MACxDC,IAAI,EAAGC,QAAQ,IAAI;QACjB,IAAI,CAAClB,aAAa,CAACmB,iBAAiB,GAAGD,QAAQ;MACjD,CAAC;MACDE,KAAK,EAAGC,GAAG,IAAI;QACb,IAAI,CAACnB,GAAG,GAAG,gBAAgB;MAC7B;KACD,CAAC;EACJ;EAEAoB,kBAAkBA,CAAA;IAChB,IAAI,CAACnB,yBAAyB,GAAG,IAAI;EACvC;EAEAoB,mBAAmBA,CAAA;IACjB,IAAI,CAACvB,aAAa,CAACuB,mBAAmB,CAAC,IAAI,CAAClB,UAAU,CAAC,CAACW,SAAS,CAAC;MAChEC,IAAI,EAAGO,KAAK,IAAI;QACd,IAAI,CAACnB,UAAU,CAACE,QAAQ,GAAG,EAAE;QAC7B,IAAI,CAACH,uBAAuB,GAAG,IAAI;MACrC,CAAC;MACDgB,KAAK,EAAGC,GAAG,IAAI,CACf;KACD,CAAC;EACJ;EAEAI,gBAAgBA,CAAA;IACd,IAAI,CAACzB,aAAa,CAAC0B,cAAc,CAAC,IAAI,CAACrB,UAAU,CAAC,CAACW,SAAS,CAAC;MAC3DC,IAAI,EAAGO,KAAK,IAAI;QACd,IAAI,CAACrB,yBAAyB,GAAG,KAAK;QACtC,IAAI,CAACE,UAAU,CAACC,KAAK,GAAG,EAAE;QAC1B,IAAI,CAACD,UAAU,CAACE,QAAQ,GAAG,EAAE;MAE/B,CAAC;MACDa,KAAK,EAAGC,GAAG,IAAI,CACf;KACD,CAAC;EACJ;CACD;AA5DYvB,cAAc,GAAA6B,UAAA,EAL1B9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWhC,cAAc,CA4D1B;SA5DYA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}