{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ShowAttendanceComponent = class ShowAttendanceComponent {\n  constructor(memberService, attendanceService, router) {\n    this.memberService = memberService;\n    this.attendanceService = attendanceService;\n    this.router = router;\n    this.attendance = [];\n    this.memberDetails = [];\n    this.showAttendance = false;\n    memberService.getAllMember().subscribe({\n      next: value => {\n        this.memberDetails = value;\n      },\n      error: err => {}\n    });\n  }\n  ngOnInit() {\n    this.getAllAttendance();\n  }\n  inTime(id, firstName) {\n    this.attendanceService.insertInTime(id).subscribe({\n      next: value => {\n        alert(\" In Time of \" + firstName + \" Added Successfully!!\");\n        this.reloadPage();\n      },\n      error: err => {\n        alert(\"Some Error Occcure While Performing the Operation!!\");\n      }\n    });\n  }\n  outTime(id, firstName) {\n    this.attendanceService.insertOutTime(id).subscribe({\n      next: value => {\n        alert(\" Out Time of \" + firstName + \" Added Successfully!!\");\n        this.reloadPage();\n      },\n      error: err => {\n        alert(\"Some Error Occcure While Performing the Operation!!\");\n      }\n    });\n  }\n  getAllAttendance() {\n    this.attendanceService.getAllRecord().subscribe({\n      next: value => {\n        this.attendance = value;\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  goBack() {}\n  reloadPage() {\n    window.location.reload();\n  }\n};\nShowAttendanceComponent = __decorate([Component({\n  selector: 'app-show-attendance',\n  templateUrl: './show-attendance.component.html',\n  styleUrls: ['./show-attendance.component.css']\n})], ShowAttendanceComponent);\nexport { ShowAttendanceComponent };","map":{"version":3,"names":["Component","ShowAttendanceComponent","constructor","memberService","attendanceService","router","attendance","memberDetails","showAttendance","getAllMember","subscribe","next","value","error","err","ngOnInit","getAllAttendance","inTime","id","firstName","insertInTime","alert","reloadPage","outTime","insertOutTime","getAllRecord","console","log","goBack","window","location","reload","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\angular\\MyFitness\\src\\app\\admin\\ui\\attendance\\show-attendance\\show-attendance.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Attendace } from 'src/app/entity/attendance';\nimport { Member } from 'src/app/entity/member';\nimport { AttendanceService } from 'src/app/services/attendance.service';\nimport { MemberService } from 'src/app/services/member.service';\n\n@Component({\n  selector: 'app-show-attendance',\n  templateUrl: './show-attendance.component.html',\n  styleUrls: ['./show-attendance.component.css'],\n})\nexport class ShowAttendanceComponent {\n\n  attendance: Attendace[] = [];\n\n  memberDetails: Member[] = [];\n\n  showAttendance = false;\n\n  constructor(private memberService: MemberService, private attendanceService: AttendanceService, private router:roi) {\n    memberService.getAllMember().subscribe({\n      next: (value) => {\n        this.memberDetails = value\n      },\n      error: (err) => {\n      },\n    })\n  }\n\n  ngOnInit() {\n    this.getAllAttendance()\n  }\n\n \n  inTime(id: number, firstName:string) {\n    this.attendanceService.insertInTime(id).subscribe({\n      next: (value) => {\n        alert(\" In Time of \"+ firstName +\" Added Successfully!!\")\n        this.reloadPage()\n      },\n      error: (err) => {\n        alert(\"Some Error Occcure While Performing the Operation!!\")\n\n      },\n    })\n  }\n\n  outTime(id: number, firstName:string) {\n    this.attendanceService.insertOutTime(id).subscribe({\n      next: (value) => {\n        alert(\" Out Time of \"+ firstName +\" Added Successfully!!\")\n        this.reloadPage()\n      },\n      error: (err) => {\n        alert(\"Some Error Occcure While Performing the Operation!!\")\n      },\n    })\n  }\n\n  getAllAttendance() {\n    this.attendanceService.getAllRecord().subscribe({\n      next: (value) => {\n        this.attendance = value;\n      },\n      error: (err) => {\n        console.log(err)\n      }\n    })\n  }\n\n  goBack(){\n\n  }\n\n  reloadPage(){\n    window.location.reload()\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAYzC,IAAaC,uBAAuB,GAApC,MAAaA,uBAAuB;EAQlCC,YAAoBC,aAA4B,EAAUC,iBAAoC,EAAUC,MAAU;IAA9F,KAAAF,aAAa,GAAbA,aAAa;IAAyB,KAAAC,iBAAiB,GAAjBA,iBAAiB;IAA6B,KAAAC,MAAM,GAANA,MAAM;IAN9G,KAAAC,UAAU,GAAgB,EAAE;IAE5B,KAAAC,aAAa,GAAa,EAAE;IAE5B,KAAAC,cAAc,GAAG,KAAK;IAGpBL,aAAa,CAACM,YAAY,EAAE,CAACC,SAAS,CAAC;MACrCC,IAAI,EAAGC,KAAK,IAAI;QACd,IAAI,CAACL,aAAa,GAAGK,KAAK;MAC5B,CAAC;MACDC,KAAK,EAAGC,GAAG,IAAI,CACf;KACD,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAGAC,MAAMA,CAACC,EAAU,EAAEC,SAAgB;IACjC,IAAI,CAACf,iBAAiB,CAACgB,YAAY,CAACF,EAAE,CAAC,CAACR,SAAS,CAAC;MAChDC,IAAI,EAAGC,KAAK,IAAI;QACdS,KAAK,CAAC,cAAc,GAAEF,SAAS,GAAE,uBAAuB,CAAC;QACzD,IAAI,CAACG,UAAU,EAAE;MACnB,CAAC;MACDT,KAAK,EAAGC,GAAG,IAAI;QACbO,KAAK,CAAC,qDAAqD,CAAC;MAE9D;KACD,CAAC;EACJ;EAEAE,OAAOA,CAACL,EAAU,EAAEC,SAAgB;IAClC,IAAI,CAACf,iBAAiB,CAACoB,aAAa,CAACN,EAAE,CAAC,CAACR,SAAS,CAAC;MACjDC,IAAI,EAAGC,KAAK,IAAI;QACdS,KAAK,CAAC,eAAe,GAAEF,SAAS,GAAE,uBAAuB,CAAC;QAC1D,IAAI,CAACG,UAAU,EAAE;MACnB,CAAC;MACDT,KAAK,EAAGC,GAAG,IAAI;QACbO,KAAK,CAAC,qDAAqD,CAAC;MAC9D;KACD,CAAC;EACJ;EAEAL,gBAAgBA,CAAA;IACd,IAAI,CAACZ,iBAAiB,CAACqB,YAAY,EAAE,CAACf,SAAS,CAAC;MAC9CC,IAAI,EAAGC,KAAK,IAAI;QACd,IAAI,CAACN,UAAU,GAAGM,KAAK;MACzB,CAAC;MACDC,KAAK,EAAGC,GAAG,IAAI;QACbY,OAAO,CAACC,GAAG,CAACb,GAAG,CAAC;MAClB;KACD,CAAC;EACJ;EAEAc,MAAMA,CAAA,GAEN;EAEAN,UAAUA,CAAA;IACRO,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;EAC1B;CACD;AAlEY9B,uBAAuB,GAAA+B,UAAA,EALnChC,SAAS,CAAC;EACTiC,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACWlC,uBAAuB,CAkEnC;SAlEYA,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}