{"ast":null,"code":"import { ConstantValues } from '../constant/Constant';\nimport * as CryptoJS from 'crypto-js';\nimport * as i0 from \"@angular/core\";\nclass EncryptDecryptService {\n  constructor() {}\n  encryption(data) {\n    try {\n      return CryptoJS.AES.encrypt(data, ConstantValues.EN_KEYS).toString();\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  decryption(data) {\n    try {\n      const pass = CryptoJS.AES.decrypt(data, ConstantValues.EN_KEYS);\n      return pass.toString(CryptoJS.enc.Utf8);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  static #_ = this.ɵfac = function EncryptDecryptService_Factory(t) {\n    return new (t || EncryptDecryptService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EncryptDecryptService,\n    factory: EncryptDecryptService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { EncryptDecryptService };","map":{"version":3,"names":["ConstantValues","CryptoJS","EncryptDecryptService","constructor","encryption","data","AES","encrypt","EN_KEYS","toString","e","console","log","decryption","pass","decrypt","enc","Utf8","_","_2","factory","ɵfac","providedIn"],"sources":["D:\\angular\\MyFitness\\src\\app\\services\\encrypt-decrypt.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ConstantValues } from '../constant/Constant';\nimport * as CryptoJS from 'crypto-js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EncryptDecryptService {\n\n  constructor() { }\n\n  encryption(data: string) {\n    try {\n      return CryptoJS.AES.encrypt(data, ConstantValues.EN_KEYS).toString();\n    }\n    catch (e) {\n      console.log(e)\n    }\n  }\n\n  decryption(data: any) {\n    try {\n      const pass = CryptoJS.AES.decrypt(data, ConstantValues.EN_KEYS)\n      return pass.toString(CryptoJS.enc.Utf8)\n    }\n    catch (e) {\n      console.log(e)\n    }\n  }\n\n}\n"],"mappings":"AACA,SAASA,cAAc,QAAQ,sBAAsB;AACrD,OAAO,KAAKC,QAAQ,MAAM,WAAW;;AAErC,MAGaC,qBAAqB;EAEhCC,YAAA,GAAgB;EAEhBC,UAAUA,CAACC,IAAY;IACrB,IAAI;MACF,OAAOJ,QAAQ,CAACK,GAAG,CAACC,OAAO,CAACF,IAAI,EAAEL,cAAc,CAACQ,OAAO,CAAC,CAACC,QAAQ,EAAE;KACrE,CACD,OAAOC,CAAC,EAAE;MACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;;EAElB;EAEAG,UAAUA,CAACR,IAAS;IAClB,IAAI;MACF,MAAMS,IAAI,GAAGb,QAAQ,CAACK,GAAG,CAACS,OAAO,CAACV,IAAI,EAAEL,cAAc,CAACQ,OAAO,CAAC;MAC/D,OAAOM,IAAI,CAACL,QAAQ,CAACR,QAAQ,CAACe,GAAG,CAACC,IAAI,CAAC;KACxC,CACD,OAAOP,CAAC,EAAE;MACRC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;;EAElB;EAAC,QAAAQ,CAAA,G;qBArBUhB,qBAAqB;EAAA;EAAA,QAAAiB,EAAA,G;WAArBjB,qBAAqB;IAAAkB,OAAA,EAArBlB,qBAAqB,CAAAmB,IAAA;IAAAC,UAAA,EAFpB;EAAM;;SAEPpB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}